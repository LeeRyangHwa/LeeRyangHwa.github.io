I"{><h2 id="객체-매핑-시작">객체 매핑 시작</h2>

<p>Jpa를 사용하려면 가장 먼저 매핑을 해야한다.</p>

<ul>
  <li>회원 테이블</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">MEMBER</span><span class="p">(</span>
  <span class="n">ID</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">255</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
  <span class="n">NAME</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">255</span><span class="p">),</span>
  <span class="n">AGE</span> <span class="nb">INTEGER</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
  <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">ID</span><span class="p">)</span>
<span class="p">);</span>
</code></pre></div></div>

<ul>
  <li>회원 클래스</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">lombok.Getter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">lombok.Setter</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.persistence.*</span><span class="o">;</span>

<span class="nd">@Getter</span>
<span class="nd">@Setter</span>
<span class="nd">@Entity</span>
<span class="nd">@Table</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"MEMBER"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Member</span> <span class="o">{</span>
    <span class="nd">@Id</span>
    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"ID"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">id</span><span class="o">;</span>

    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"NAME"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">username</span><span class="o">;</span>
    
    <span class="kd">private</span> <span class="nc">Integer</span> <span class="n">age</span><span class="o">;</span>

<span class="o">}</span>
</code></pre></div></div>

<p>회원 클래스에 매핑 정보를 표시하는 어노테이션을 몇 개 추가했다.</p>

<ul>
  <li>
    <p>@Entity</p>

    <p>이 클래스를 테이블과 매핑한다고 JPA에게 알려준다.</p>

    <p>엔티티 클래스라고 한다.</p>
  </li>
  <li>@Table</li>
  <li>@ Id</li>
  <li>@Column</li>
  <li>매핑 정보가 없는 필드</li>
</ul>

<p>JPA는 persistence.xml을 사용해서 필요한 설정 정보를 관리한다. 이 설정 파일이 META-INF/persistence.xml 클래스 패스 경로에 있으면 별도의 설정 없이 JPA가 인식할 수 있다.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;persistence</span> <span class="na">xmlns=</span><span class="s">"http://xmlns.jcp.org/xml/ns/persistence"</span>
             <span class="na">version=</span><span class="s">"2.1"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;persistence-unit</span> <span class="na">name=</span><span class="s">"jpabook"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;properties&gt;</span>
<span class="c">&lt;!--             속성 설정 --&gt;</span>
                    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"javax.persistence.jdbc.driver"</span> <span class="na">value=</span><span class="s">"org.h2.Driver"</span><span class="nt">&gt;&lt;/property&gt;</span>
                    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"javax.persistence.jdbc.user"</span> <span class="na">value=</span><span class="s">"sa"</span><span class="nt">&gt;&lt;/property&gt;</span>
                    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"javax.persistence.jdbc.password"</span> <span class="na">value=</span><span class="s">""</span><span class="nt">&gt;&lt;/property&gt;</span>
                    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"javax.persistence.jdbc.url"</span> <span class="na">value=</span><span class="s">"jdbc:h2:tcp://localhost/~/test"</span><span class="nt">&gt;&lt;/property&gt;</span>
                    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"hibernate.dialect"</span> <span class="na">value=</span><span class="s">"org.hibernate.dialect.H2Dialect"</span><span class="nt">&gt;&lt;/property&gt;</span>

                    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"hibernate.show_sql"</span> <span class="na">value=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
                    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"hibernate.format_sql"</span> <span class="na">value=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
                    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"hibernate.use_sql_comments"</span> <span class="na">value=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
                    <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"hibernate.id.new_generator_mappings"</span> <span class="na">value=</span><span class="s">"true"</span><span class="nt">/&gt;</span>

        <span class="nt">&lt;/properties&gt;</span>
    <span class="nt">&lt;/persistence-unit&gt;</span>
<span class="nt">&lt;/persistence&gt;</span>
</code></pre></div></div>

<p>JPA 애플리케이션 시작하는 코드</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">javax.persistence.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">JpaMain</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">//엔티티 매니저 팩토리 생성</span>
        <span class="nc">EntityManagerFactory</span> <span class="n">emf</span> <span class="o">=</span> <span class="nc">Persistence</span><span class="o">.</span><span class="na">createEntityManagerFactory</span><span class="o">(</span><span class="s">"jpabook"</span><span class="o">);</span>
        <span class="c1">// 엔티티 매니저 생성</span>
        <span class="nc">EntityManager</span> <span class="n">em</span> <span class="o">=</span> <span class="n">emf</span><span class="o">.</span><span class="na">createEntityManager</span><span class="o">();</span>
        <span class="c1">//트랜잭션 획득</span>
        <span class="nc">EntityTransaction</span> <span class="n">tx</span> <span class="o">=</span> <span class="n">em</span><span class="o">.</span><span class="na">getTransaction</span><span class="o">();</span>

        <span class="k">try</span><span class="o">{</span>
            <span class="n">tx</span><span class="o">.</span><span class="na">begin</span><span class="o">();</span>
            <span class="n">logic</span><span class="o">(</span><span class="n">em</span><span class="o">);</span>
            <span class="n">tx</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
        <span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
            <span class="n">tx</span><span class="o">.</span><span class="na">rollback</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
            <span class="n">em</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="n">emf</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>엔티티 매니저 설정</li>
  <li>트랜잭션 관리</li>
  <li>비즈니스 로직</li>
</ul>

<h3 id="엔티티-매니저-설정">엔티티 매니저 설정</h3>

<ul>
  <li>
    <p>엔티티 매니저 팩토리 생성</p>
  </li>
  <li>
    <p>엔티티 매니저 생성</p>
  </li>
  <li>
    <p>종료</p>
  </li>
</ul>

<h3 id="트랜잭션-관리">트랜잭션 관리</h3>

<p>JPA를 사용하면 항상 트랜잭션 안에서 데이터를 변경해야 한다. 트랜잭션 없이 데이터를 변경하면 예외가 발생한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//트랜잭션 획득</span>
<span class="nc">EntityTransaction</span> <span class="n">tx</span> <span class="o">=</span> <span class="n">em</span><span class="o">.</span><span class="na">getTransaction</span><span class="o">();</span>

<span class="k">try</span><span class="o">{</span>
	<span class="n">tx</span><span class="o">.</span><span class="na">begin</span><span class="o">();</span><span class="c1">//트랜젝션 시작</span>
	<span class="n">logic</span><span class="o">(</span><span class="n">em</span><span class="o">);</span> <span class="c1">// 비즈니스 로직 실행</span>
	<span class="n">tx</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span><span class="c1">//트랜젝션 커밋</span>
<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
	<span class="n">tx</span><span class="o">.</span><span class="na">rollback</span><span class="o">();</span> <span class="c1">//예외 발생시 트랜젝션 롤백</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="비즈니스-로직">비즈니스 로직</h3>

<p>회원 엔티티를 하나 생성후 엔티티 매니저를 통해 데이터베이스에 등록, 수정, 삭제, 조회</p>

<ul>
  <li>
    <p>등록</p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nc">String</span> <span class="n">id</span><span class="o">=</span><span class="s">"id1"</span><span class="o">;</span>
  <span class="nc">Member</span> <span class="n">member</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Member</span><span class="o">();</span>
  <span class="n">member</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
  <span class="n">member</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">"지한"</span><span class="o">);</span>
  <span class="n">member</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>

  <span class="c1">//등록</span>
  <span class="n">em</span><span class="o">.</span><span class="na">persist</span><span class="o">(</span><span class="n">member</span><span class="o">);</span>
</code></pre></div>    </div>
  </li>
  <li>수정</li>
  <li>
    <p>삭제</p>
  </li>
  <li>한 건 조회</li>
  <li>목록 조회</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">logic</span><span class="o">(</span><span class="nc">EntityManager</span> <span class="n">em</span><span class="o">){</span>
        <span class="nc">String</span> <span class="n">id</span><span class="o">=</span><span class="s">"id1"</span><span class="o">;</span>
        <span class="nc">Member</span> <span class="n">member</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Member</span><span class="o">();</span>
        <span class="n">member</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
        <span class="n">member</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">"지한"</span><span class="o">);</span>
        <span class="n">member</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>

        <span class="c1">//등록</span>
        <span class="n">em</span><span class="o">.</span><span class="na">persist</span><span class="o">(</span><span class="n">member</span><span class="o">);</span>
        <span class="c1">//수정</span>
        <span class="n">member</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="mi">20</span><span class="o">);</span>

        <span class="c1">//한건 조회</span>
        <span class="nc">Member</span> <span class="n">findMember</span><span class="o">=</span> <span class="n">em</span><span class="o">.</span><span class="na">find</span><span class="o">(</span><span class="nc">Member</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">id</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"findMember ="</span> <span class="o">+</span> <span class="n">findMember</span><span class="o">.</span><span class="na">getUsername</span><span class="o">()</span> <span class="o">+</span> <span class="s">", age="</span><span class="o">+</span><span class="n">findMember</span><span class="o">.</span><span class="na">getAge</span><span class="o">());</span>

        <span class="nc">String</span> <span class="n">listq</span> <span class="o">=</span> <span class="s">"select m from Member m"</span><span class="o">;</span>
        <span class="c1">//목록 조회</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Member</span><span class="o">&gt;</span> <span class="n">members</span> <span class="o">=</span> <span class="n">em</span><span class="o">.</span><span class="na">createQuery</span><span class="o">(</span><span class="n">listq</span><span class="o">,</span> <span class="nc">Member</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">getResultList</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"members.size="</span><span class="o">+</span> <span class="n">members</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>

        <span class="n">em</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">member</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>
:ET